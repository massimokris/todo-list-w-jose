{"ast":null,"code":"var _jsxFileName = \"/Users/massi/Desktop/todo-list/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport { useContext, useState } from \"react\";\nimport { Context } from \"./index\";\nimport \"./App.css\";\nimport Input from \"./components/input\";\nimport Task from \"./components/task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const context = useContext(Context);\n  const [lists, setLists] = useState([]);\n  console.log(context.lists);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Box\",\n      children: !context.lists.length ? \"No tasks...\" : context.lists.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lo5k0/5ebN840+uxykfOlr523KI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/massi/Desktop/todo-list/src/App.js"],"names":["logo","useContext","useState","Context","Input","Task","App","context","lists","setLists","console","log","length","map","task"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAGN,UAAU,CAACE,OAAD,CAA1B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACC,KAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAER,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG,CAACO,OAAO,CAACC,KAAR,CAAcI,MAAf,GACG,aADH,GAEGL,OAAO,CAACC,KAAR,CAAcK,GAAd,CAAmBC,IAAD,iBAAU,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAA5B;AAHN;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnBQR,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport { useContext, useState } from \"react\";\nimport { Context } from \"./index\";\nimport \"./App.css\";\nimport Input from \"./components/input\";\nimport Task from \"./components/task\";\n\nfunction App() {\n  const context = useContext(Context);\n  const [lists, setLists] = useState([]);\n  console.log(context.lists);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>To-Do List</h1>\n      </header>\n      <Input />\n      <div className=\"Box\">\n        {!context.lists.length\n          ? \"No tasks...\"\n          : context.lists.map((task) => <Task task={task} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}