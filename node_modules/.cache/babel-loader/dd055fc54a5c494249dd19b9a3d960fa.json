{"ast":null,"code":"var _jsxFileName = \"/Users/massi/Desktop/todo-list/src/components/input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"../App\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input() {\n  _s();\n\n  const context = useContext(Context);\n  const [task, setTask] = useState(\"\");\n\n  const checkTask = () => {\n    const exist = context.lists.tasks.indexOf(task);\n    console.log(context.lists.tasks);\n\n    if (exist === -1 && task !== \"\") {\n      handleTask();\n    } else {\n      alert(\"Invalid task!\");\n    }\n  };\n\n  const handleTask = () => {\n    const newTasks = {\n      tasks: [...context.lists.tasks, task]\n    };\n    console.log(newTasks);\n    context.setLists({ ...context.lists,\n      ...newTasks\n    });\n    setTask(\"\");\n    console.log(context.lists);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Input-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Input\",\n      type: \"text\",\n      placeholder: \"Add new task...\",\n      value: task,\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Input-button\",\n      onClick: () => checkTask(),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"mXUrNegrDQE+j/T6WqDaWbg9dpE=\");\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/massi/Desktop/todo-list/src/components/input.js"],"names":["React","useContext","useState","Context","Input","context","task","setTask","checkTask","exist","lists","tasks","indexOf","console","log","handleTask","alert","newTasks","setLists","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,CAACE,OAAD,CAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,SAAS,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGJ,OAAO,CAACK,KAAR,CAAcC,KAAd,CAAoBC,OAApB,CAA4BN,IAA5B,CAAd;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACK,KAAR,CAAcC,KAA1B;;AAEA,QAAIF,KAAK,KAAK,CAAC,CAAX,IAAgBH,IAAI,KAAK,EAA7B,EAAiC;AAC/BS,MAAAA,UAAU;AACX,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,GATD;;AAWA,QAAMD,UAAU,GAAG,MAAM;AACvB,UAAME,QAAQ,GAAG;AACfN,MAAAA,KAAK,EAAE,CAAC,GAAGN,OAAO,CAACK,KAAR,CAAcC,KAAlB,EAAyBL,IAAzB;AADQ,KAAjB;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEAZ,IAAAA,OAAO,CAACa,QAAR,CAAiB,EACf,GAAGb,OAAO,CAACK,KADI;AAEf,SAAGO;AAFY,KAAjB;AAIAV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACK,KAApB;AACD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,iBAHd;AAIE,MAAA,KAAK,EAAEJ,IAJT;AAKE,MAAA,QAAQ,EAAGa,CAAD,IAAOZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAL1B;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE,MAAMb,SAAS,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5CuBJ,K;;KAAAA,K","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Context } from \"../App\";\nimport \"../App.css\";\n\nexport default function Input() {\n  const context = useContext(Context);\n  const [task, setTask] = useState(\"\");\n\n  const checkTask = () => {\n    const exist = context.lists.tasks.indexOf(task);\n    console.log(context.lists.tasks);\n\n    if (exist === -1 && task !== \"\") {\n      handleTask();\n    } else {\n      alert(\"Invalid task!\");\n    }\n  };\n\n  const handleTask = () => {\n    const newTasks = {\n      tasks: [...context.lists.tasks, task],\n    };\n\n    console.log(newTasks);\n\n    context.setLists({\n      ...context.lists,\n      ...newTasks,\n    });\n    setTask(\"\");\n    console.log(context.lists);\n  };\n\n  return (\n    <div className=\"Input-div\">\n      <input\n        className=\"Input\"\n        type=\"text\"\n        placeholder=\"Add new task...\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n      ></input>\n      <button className=\"Input-button\" onClick={() => checkTask()}>\n        +\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}