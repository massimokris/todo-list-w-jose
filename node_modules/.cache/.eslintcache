[{"/Users/massi/Desktop/todo-list/src/index.js":"1","/Users/massi/Desktop/todo-list/src/App.js":"2","/Users/massi/Desktop/todo-list/src/reportWebVitals.js":"3","/Users/massi/Desktop/todo-list/src/components/input.js":"4","/Users/massi/Desktop/todo-list/src/components/task.js":"5","/Users/massi/Desktop/todo-list/src/components/tasks.js":"6","/Users/massi/Desktop/todo-list/src/icons/update.js":"7","/Users/massi/Desktop/todo-list/src/icons/delete.js":"8"},{"size":500,"mtime":1646523538215,"results":"9","hashOfConfig":"10"},{"size":686,"mtime":1646539232302,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1646509589029,"results":"12","hashOfConfig":"10"},{"size":942,"mtime":1646590563982,"results":"13","hashOfConfig":"10"},{"size":2192,"mtime":1646580634495,"results":"14","hashOfConfig":"10"},{"size":709,"mtime":1646542712383,"results":"15","hashOfConfig":"10"},{"size":589,"mtime":1646534549893,"results":"16","hashOfConfig":"10"},{"size":543,"mtime":1646534255688,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1ds2rpa",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/massi/Desktop/todo-list/src/index.js",[],[],["45","46"],"/Users/massi/Desktop/todo-list/src/App.js",[],[],"/Users/massi/Desktop/todo-list/src/reportWebVitals.js",[],[],"/Users/massi/Desktop/todo-list/src/components/input.js",[],[],"/Users/massi/Desktop/todo-list/src/components/task.js",["47"],[],"import React, { useState, useContext } from \"react\";\nimport { Context } from \"../App\";\nimport Delete from \"../icons/delete\";\nimport Update from \"../icons/update\";\nimport \"../App.css\";\n\nexport default function Task(props) {\n  const context = useContext(Context);\n  const [check, setCheck] = useState(props.check ? props.check : false);\n\n  const handleCheck = () => {\n    const index = context.lists.tasks.indexOf(props.task);\n    if (index !== -1) {\n      const completedTask = context.lists.tasks[index];\n      context.lists.tasks.splice(index, 1);\n\n      const newLists = {\n        ...context.lists,\n        completedTasks: [...context.lists.completedTasks, completedTask],\n      };\n\n      context.setLists(newLists);\n      setCheck(!check);\n    } else {\n      const index = context.lists.completedTasks.indexOf(props.task);\n      const task = context.lists.completedTasks[index];\n      context.lists.completedTasks.splice(index, 1);\n\n      const newLists = {\n        ...context.lists,\n        tasks: [...context.lists.tasks, task],\n      };\n\n      context.setLists(newLists);\n    }\n  };\n\n  const deleteTask = () => {\n    let deletedTask;\n    const index = context.lists.tasks.indexOf(props.task);\n    if (index !== -1) {\n      deletedTask = context.lists.tasks[index];\n      context.lists.tasks.splice(index, 1);\n    } else {\n      const index = context.lists.completedTasks.indexOf(props.task);\n      deletedTask = context.lists.completedTasks[index];\n      context.lists.completedTasks.splice(index, 1);\n    }\n\n    const newLists = {\n      ...context.lists,\n      deletedTasks: [...context.lists.deletedTasks, deletedTask],\n    };\n\n    context.setLists(newLists);\n  };\n\n  return (\n    <div className=\"Task-div\">\n      <label\n        className=\"Task\"\n        style={{ textDecoration: check ? \"line-through\" : \"none\" }}\n      >\n        <input\n          checked={check}\n          className=\"Task-checkbox\"\n          type=\"checkbox\"\n          onChange={() => handleCheck()}\n        ></input>\n        {props.task}\n      </label>\n\n      <div className=\"Task-elements\">\n        <Update />\n        <a onClick={() => deleteTask()}>\n          <Delete />\n        </a>\n      </div>\n    </div>\n  );\n}\n",["48","49"],"/Users/massi/Desktop/todo-list/src/components/tasks.js",[],[],"/Users/massi/Desktop/todo-list/src/icons/update.js",[],[],"/Users/massi/Desktop/todo-list/src/icons/delete.js",[],[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":75,"column":9,"nodeType":"56","endLine":75,"endColumn":41},{"ruleId":"50","replacedBy":"57"},{"ruleId":"52","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["59"],["60"],"no-global-assign","no-unsafe-negation"]